import json
import requests
from datetime import datetime, date, timedelta
from config import LINE_HEADERS
from models import ReservationData
import logging
import os

logger = logging.getLogger(__name__)

def reply_to_user(reply_token: str, message: str):
    """‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤"""
    payload = {
        "replyToken": reply_token,
        "messages": [{"type": "text", "text": message}]
    }
    try:
        requests.post("https://api.line.me/v2/bot/message/reply", headers=LINE_HEADERS, data=json.dumps(payload))
    except Exception as e:
        logger.error(f"reply_to_user error: {e}")

def send_flex_confirmation(reply_token: str, res: ReservationData):
    """‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á"""
    flex_message = {
        "type": "flex",
        "altText": "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÇ‡∏ï‡πä‡∏∞",
        "contents": {
            "type": "bubble",
            "styles": {
                "body": {
                    "backgroundColor": "#f8f9fa"
                }
            },
            "body": {
                "type": "box",
                "layout": "vertical",
                "spacing": "md",
                "contents": [
                    {
                        "type": "text",
                        "text": "‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÇ‡∏ï‡πä‡∏∞",
                        "weight": "bold",
                        "size": "xl",
                        "color": "#46291A",
                        "align": "center"
                    },
                    {
                        "type": "separator",
                        "margin": "md",
                        "color": "#46291A"
                    },# ‡πÄ‡∏û‡∏¥‡πà‡∏° ID ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
                    {
                        "type": "box",
                        "layout": "vertical",
                        "spacing": "sm",
                        "margin": "lg",
                        "paddingAll": "md",
                        "backgroundColor": "#e8f5e8",
                        "cornerRadius": "md",
                        "contents": [
                            {
                                "type": "text",
                                "text": f"üé´ ID ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á: {res.booking_id}",
                                "weight": "bold",
                                "size": "lg",
                                "color": "#2d5016",
                                "align": "center"
                            },
                            {
                                "type": "text",
                                "text": "üìù ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Å‡πá‡∏ö ID ‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á",
                                "size": "xs",
                                "color": "#666666",
                                "align": "center",
                                "margin": "sm"
                            }
                        ]
                    },{
                        "type": "box",
                        "layout": "vertical",
                        "spacing": "sm",
                        "margin": "lg",
                        "contents": [
                            {
                                "type": "box",
                                "layout": "baseline",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": "üë§ ‡∏ä‡∏∑‡πà‡∏≠:",
                                        "size": "md",
                                        "color": "#666666",
                                        "flex": 2
                                    },
                                    {
                                        "type": "text",
                                        "text": res.customer_name,
                                        "size": "md",
                                        "color": "#333333",
                                        "flex": 3,
                                        "weight": "bold"
                                    }
                                ]
                            },
                            {
                                "type": "box",
                                "layout": "baseline",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": "üìû ‡πÄ‡∏ö‡∏≠‡∏£‡πå:",
                                        "size": "md",
                                        "color": "#666666",
                                        "flex": 2
                                    },
                                    {
                                        "type": "text",
                                        "text": res.phone,
                                        "size": "md",
                                        "color": "#333333",
                                        "flex": 3,
                                        "weight": "bold"
                                    }
                                ]
                            },{
                                "type": "box",
                                "layout": "baseline",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": "üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:",
                                        "size": "md",
                                        "color": "#666666",
                                        "flex": 2
                                    },
                                    {
                                        "type": "text",
                                        "text": res.date,
                                        "size": "md",
                                        "color": "#333333",
                                        "flex": 3,
                                        "weight": "bold"
                                    }
                                ]
                            },
                            {
                                "type": "box",
                                "layout": "baseline",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": "üïê ‡πÄ‡∏ß‡∏•‡∏≤:",
                                        "size": "md",
                                        "color": "#666666",
                                        "flex": 2
                                    },
                                    {
                                        "type": "text",
                                        "text": res.time,
                                        "size": "md",
                                        "color": "#333333",
                                        "flex": 3,
                                        "weight": "bold"
                                    }
                                ]
                            },
                            {
                                "type": "box",
                                "layout": "baseline",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": "üë• ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô:",
                                        "size": "md",
                                        "color": "#666666",
                                        "flex": 2
                                    },
                                    {
                                        "type": "text",
                                        "text": f"{res.party_size} ‡∏Ñ‡∏ô",
                                        "size": "md",
                                        "color": "#333333",
                                        "flex": 3,
                                        "weight": "bold"
                                    }
                                ]
                            },
                            {
                                "type": "box",
                                "layout": "baseline",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": "üìù ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:",
                                        "size": "md",
                                        "color": "#666666",
                                        "flex": 2
                                    },
                                    {
                                        "type": "text",
                                        "text": res.special_requests or "‡πÑ‡∏°‡πà‡∏°‡∏µ",
                                        "size": "md",
                                        "color": "#333333",
                                        "flex": 3,
                                        "wrap": True
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "separator",
                        "margin": "lg"
                    },
                    {
                        "type": "text",
                        "text": "üìç ‡∏£‡πâ‡∏≤‡∏ô‡∏¢‡∏±‡∏Å‡∏©‡πå‡πÉ‡∏´‡∏ç‡πà‡πÅ‡∏î‡∏ô‡πÉ‡∏ï‡πâ",
                        "size": "md",
                        "color": "#46291A",
                        "align": "center",
                        "weight": "bold",
                        "margin": "md"
                    }
                ]
            }
        }
    }
    payload = {"replyToken": reply_token, "messages": [flex_message]}
    try:
        requests.post("https://api.line.me/v2/bot/message/reply", headers=LINE_HEADERS, data=json.dumps(payload))
    except Exception as e:
        logger.error(f"send_flex_confirmation error: {e}")

def send_date_selection_flex(reply_token: str):
    """‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà"""
    today = datetime.today().date()
    days = [(today + timedelta(days=i)) for i in range(7)]

    thai_days = ["‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå", "‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£", "‡∏û‡∏∏‡∏ò", "‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ", "‡∏®‡∏∏‡∏Å‡∏£‡πå", "‡πÄ‡∏™‡∏≤‡∏£‡πå", "‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå"]
    thai_months = ["‡∏°.‡∏Ñ.", "‡∏Å.‡∏û.", "‡∏°‡∏µ.‡∏Ñ.", "‡πÄ‡∏°.‡∏¢.", "‡∏û.‡∏Ñ.", "‡∏°‡∏¥.‡∏¢.",
                   "‡∏Å.‡∏Ñ.", "‡∏™.‡∏Ñ.", "‡∏Å.‡∏¢.", "‡∏ï.‡∏Ñ.", "‡∏û.‡∏¢.", "‡∏ò.‡∏Ñ."]

    buttons = []
    for d in days:
        thai_day = thai_days[d.weekday()]
        thai_month = thai_months[d.month - 1]
        thai_year = d.year + 543

        display_date = f"{d.day} {thai_month}"
        if d == today:
            display_date = f"‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ ({display_date})"
        elif d == today + timedelta(days=1):
            display_date = f"‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ ({display_date})"
        else:
            display_date = f"{thai_day} ({display_date})"

        return_date = d.strftime("%d-%m-") + str(thai_year)

        buttons.append({
            "type": "button",
            "action": {
                "type": "message",
                "label": display_date[:20],
                "text": return_date
            },
            "style": "primary",
            "color": "#46291A",
            "height": "sm"
        })

    # ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏•‡∏∞ 2 ‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß
    button_boxes = []
    for i in range(0, len(buttons), 2):
        row = {
            "type": "box",
            "layout": "horizontal",
            "spacing": "sm",
            "contents": buttons[i:i + 2]
        }
        button_boxes.append(row)

    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á (‡πÅ‡∏¢‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß)
    cancel_button = {
        "type": "button",
        "action": {
            "type": "message",
            "label": "‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á",
            "text": "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á"
        },
        "style": "secondary",
        "color": "#dc3545",
        "height": "sm"
    }

    flex = {
        "type": "flex",
        "altText": "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á",
        "contents": {
            "type": "bubble",
            "size": "mega",
            "styles": {
                "body": {
                    "backgroundColor": "#ffffff"
                }
            },
            "body": {
                "type": "box",
                "layout": "vertical",
                "spacing": "md",
                "paddingAll": "lg",
                "contents": [
                    {
                        "type": "text",
                        "text": "üìÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á",
                        "weight": "bold",
                        "size": "xl",
                        "color": "#46291A",
                        "align": "center"
                    },
                    {
                        "type": "separator",
                        "margin": "md",
                        "color": "#46291A"
                    },
                    {
                        "type": "text",
                        "text": "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏≠‡∏á‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 7 ‡∏ß‡∏±‡∏ô",
                        "size": "sm",
                        "color": "#666666",
                        "align": "center",
                        "margin": "md"
                    },
                    {
                        "type": "box",
                        "layout": "vertical",
                        "spacing": "sm",
                        "margin": "lg",
                        "contents": button_boxes
                    },
                    {
                        "type": "separator",
                        "margin": "lg",
                        "color": "#e0e0e0"
                    },
                    {
                        "type": "box",
                        "layout": "vertical",
                        "margin": "md",
                        "contents": [cancel_button]
                    }
                ]
            }
        }
    }

    payload = {
        "replyToken": reply_token,
        "messages": [flex]
    }

    try:
        requests.post("https://api.line.me/v2/bot/message/reply", headers=LINE_HEADERS, data=json.dumps(payload))
    except Exception as e:
        logger.error(f"send_date_selection_flex error: {e}")

def send_time_selection_flex(reply_token: str):
    """‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤"""
    start_time = datetime.strptime("18:30", "%H:%M")
    times = [(start_time + timedelta(minutes=30 * i)).strftime("%H:%M") for i in range(7)]  # 18:30 ‡∏ñ‡∏∂‡∏á 21:30

    buttons = []
    for t in times:
        buttons.append({
            "type": "button",
            "action": {
                "type": "message",
                "label": t,
                "text": t
            },
            "style": "primary",
            "color": "#46291A",
            "height": "sm",
            "margin": "none"
        })

    # ‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡πá‡∏ô 2 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
    button_boxes = []
    for i in range(0, len(buttons), 2):
        row_buttons = buttons[i:i+2]
        button_boxes.append({
            "type": "box",
            "layout": "horizontal",
            "spacing": "md",
            "margin": "sm",
            "contents": row_buttons
        })

    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠ (‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏µ‡πà)
    if len(times) % 2 == 1:
        last_button_box = {
            "type": "box",
            "layout": "horizontal",
            "spacing": "md",
            "margin": "sm",
            "contents": [buttons[-1]]
        }
        button_boxes[-1] = last_button_box

    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
    cancel_button = {
        "type": "button",
        "action": {
            "type": "message",
            "label": "‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á",
            "text": "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á"
        },
        "style": "secondary",
        "color": "#dc3545",
        "height": "sm"
    }

    flex = {
        "type": "flex",
        "altText": "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á",
        "contents": {
            "type": "bubble",
            "size": "mega",
            "styles": {
                "body": {
                    "backgroundColor": "#ffffff"
                }
            },
            "body": {
                "type": "box",
                "layout": "vertical",
                "spacing": "md",
                "paddingAll": "lg",
                "contents": [
                    {
                        "type": "text",
                        "text": "üïê ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á",
                        "weight": "bold",
                        "size": "xl",
                        "color": "#46291A",
                        "align": "center"
                    },
                    {
                        "type": "separator",
                        "margin": "md",
                        "color": "#46291A"
                    },
                    {
                        "type": "text",
                        "text": "‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ 18:30 - 21:30 ‡∏ô.",
                        "size": "sm",
                        "color": "#666666",
                        "align": "center",
                        "margin": "md"
                    },
                    {
                        "type": "box",
                        "layout": "vertical",
                        "spacing": "sm",
                        "margin": "lg",
                        "paddingAll": "sm",
                        "backgroundColor": "#f8f9fa",
                        "cornerRadius": "md",
                        "contents": button_boxes
                    },
                    {
                        "type": "separator",
                        "margin": "lg",
                        "color": "#e0e0e0"
                    },
                    {
                        "type": "box",
                        "layout": "vertical",
                        "margin": "md",
                        "contents": [cancel_button]
                    }
                ]
            }
        }
    }

    payload = {
        "replyToken": reply_token,
        "messages": [flex]
    }
    try:
        requests.post("https://api.line.me/v2/bot/message/reply", headers=LINE_HEADERS, data=json.dumps(payload))
    except Exception as e:
        logger.error(f"send_time_selection_flex error: {e}")

def send_user_reservations_flex(reply_token: str, reservations: list):
    """‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"""
    if not reservations:
        reply_to_user(reply_token, "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö")
        return
    
    contents = []
    for i, res in enumerate(reservations[:5]):  # ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 5 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
        data = res["data"]
        booking_id = data.get("ID ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á", "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏")
        contents.append({
            "type": "box",
            "layout": "vertical",
            "spacing": "sm",
            "paddingAll": "md",
            "backgroundColor": "#f8f9fa",
            "cornerRadius": "md",
            "contents": [
                {
                    "type": "text",
                    "text": f"üé´ ID: {booking_id}",
                    "weight": "bold",
                    "size": "md",
                    "color": "#2d5016"
                },
                {
                    "type": "text",
                    "text": f"üìÖ {data['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà']} ‚è∞ {data['‡πÄ‡∏ß‡∏•‡∏≤']}",
                    "size": "sm",
                    "color": "#333333"
                },
                {
                    "type": "text",
                    "text": f"üë• {data['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô']} ‡∏Ñ‡∏ô",
                    "size": "sm",
                    "color": "#666666"
                },
                {
                    "type": "button",
                    "action": {
                        "type": "message",
                        "label": "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ô‡∏µ‡πâ",
                        "text": f"‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å:{data['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà']}:{data['‡πÄ‡∏ß‡∏•‡∏≤']}"
                    },
                    "style": "primary",
                    "color": "#dc3545",
                    "height": "sm"
                }
            ]
        })
        
        if i < len(reservations) - 1:
            contents.append({"type": "separator", "margin": "md"})
    
    flex = {
        "type": "flex",
        "altText": "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
        "contents": {
            "type": "bubble",
            "size": "mega",
            "body": {
                "type": "box",
                "layout": "vertical",
                "spacing": "md",
                "contents": [
                    {
                        "type": "text",
                        "text": "üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
                        "weight": "bold",
                        "size": "xl",
                        "color": "#2d5016",
                        "align": "center"
                    },
                    {
                        "type": "separator",
                        "margin": "md",
                        "color": "#2d5016"
                    },
                    {
                        "type": "box",
                        "layout": "vertical",
                        "spacing": "md",
                        "margin": "lg",
                        "contents": contents
                    }
                ]
            }
        }
    }
    
    payload = {
        "replyToken": reply_token,
        "messages": [flex]
    }
    try:
        requests.post("https://api.line.me/v2/bot/message/reply", headers=LINE_HEADERS, data=json.dumps(payload))
    except Exception as e:
        logger.error(f"send_user_reservations_flex error: {e}")

def send_timeout_warning_flex(user_id: str):
    """‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô timeout ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å"""
    flex_message = {
        "type": "flex",
        "altText": "‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤",
        "contents": {
            "type": "bubble",
            "styles": {
                "body": {
                    "backgroundColor": "#fff3cd"
                }
            },
            "body": {
                "type": "box",
                "layout": "vertical",
                "spacing": "md",
                "contents": [
                    {
                        "type": "text",
                        "text": "‚è∞ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤",
                        "weight": "bold",
                        "size": "xl",
                        "color": "#856404",
                        "align": "center"
                    },
                    {
                        "type": "separator",
                        "margin": "md",
                        "color": "#856404"
                    },
                    {
                        "type": "text",
                        "text": "‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ô‡∏≤‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ\n‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ï‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?",
                        "size": "md",
                        "color": "#333333",
                        "align": "center",
                        "wrap": True,
                        "margin": "lg"
                    },
                    {
                        "type": "box",
                        "layout": "vertical",
                        "spacing": "sm",
                        "margin": "lg",
                        "contents": [
                            {
                                "type": "button",
                                "action": {
                                    "type": "message",
                                    "label": "‚úÖ ‡∏ó‡∏≥‡∏ï‡πà‡∏≠",
                                    "text": "‡∏ó‡∏≥‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á"
                                },
                                "style": "primary",
                                "color": "#28a745",
                                "height": "sm"
                            },
                            {
                                "type": "button",
                                "action": {
                                    "type": "message",
                                    "label": "‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á",
                                    "text": "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á"
                                },
                                "style": "secondary",
                                "color": "#dc3545",
                                "height": "sm",
                                "margin": "sm"
                            }
                        ]
                    },
                    {
                        "type": "text",
                        "text": "‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 2 ‡∏ô‡∏≤‡∏ó‡∏µ\n‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥",
                        "size": "xs",
                        "color": "#666666",
                        "align": "center",
                        "wrap": True,
                        "margin": "lg"
                    }
                ]
            }
        }
    }
    
    # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á user ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ push message
    payload = {
        "to": user_id,
        "messages": [flex_message]
    }
    
    try:
        requests.post("https://api.line.me/v2/bot/message/push", headers=LINE_HEADERS, data=json.dumps(payload))
    except Exception as e:
        logger.error(f"send_timeout_warning_flex error: {e}")

def send_admin_notification(user_id: str, message_text: str, display_name: str):
    """‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏∏‡∏¢‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á"""
    # ‡∏î‡∏∂‡∏á Admin User ID ‡∏´‡∏£‡∏∑‡∏≠ Group ID ‡∏à‡∏≤‡∏Å environment
    ADMIN_USER_ID = os.getenv("ADMIN_USER_ID")  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô .env
    ADMIN_GROUP_ID = os.getenv("ADMIN_GROUP_ID")  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô .env (‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πâ group)
    
    if not ADMIN_USER_ID and not ADMIN_GROUP_ID:
        # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ Admin ID ‡πÉ‡∏´‡πâ log ‡πÑ‡∏ß‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
        logger.info(f"Customer {display_name} ({user_id}) sent message during booking: {message_text}")
        return
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
    admin_message = {
        "type": "flex",
        "altText": f"‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ {display_name} ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á",
        "contents": {
            "type": "bubble",
            "styles": {
                "body": {
                    "backgroundColor": "#e3f2fd"
                }
            },
            "body": {
                "type": "box",
                "layout": "vertical",
                "spacing": "md",
                "contents": [
                    {
                        "type": "text",
                        "text": "üí¨ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤",
                        "weight": "bold",
                        "size": "lg",
                        "color": "#1565c0",
                        "align": "center"
                    },
                    {
                        "type": "separator",
                        "margin": "md",
                        "color": "#1565c0"
                    },
                    {
                        "type": "box",
                        "layout": "vertical",
                        "spacing": "sm",
                        "margin": "lg",
                        "contents": [
                            {
                                "type": "box",
                                "layout": "baseline",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": "üë§ ‡∏ä‡∏∑‡πà‡∏≠:",
                                        "size": "sm",
                                        "color": "#666666",
                                        "flex": 2
                                    },
                                    {
                                        "type": "text",
                                        "text": display_name,
                                        "size": "sm",
                                        "color": "#333333",
                                        "flex": 5,
                                        "weight": "bold"
                                    }
                                ]
                            },
                            {
                                "type": "box",
                                "layout": "baseline",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": "üÜî User ID:",
                                        "size": "sm",
                                        "color": "#666666",
                                        "flex": 2
                                    },
                                    {
                                        "type": "text",
                                        "text": user_id,
                                        "size": "xs",
                                        "color": "#333333",
                                        "flex": 5
                                    }
                                ]
                            },
                            {
                                "type": "separator",
                                "margin": "md"
                            },
                            {
                                "type": "text",
                                "text": "üí¨ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°:",
                                "size": "sm",
                                "color": "#666666",
                                "margin": "md"
                            },
                            {
                                "type": "text",
                                "text": message_text,
                                "size": "md",
                                "color": "#333333",
                                "wrap": True,
                                "backgroundColor": "#f5f5f5",
                                "paddingAll": "sm",
                                "cornerRadius": "md",
                                "margin": "sm"
                            }
                        ]
                    },
                    {
                        "type": "separator",
                        "margin": "lg"
                    },
                    {
                        "type": "text",
                        "text": "üìã ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÇ‡∏ï‡πä‡∏∞",
                        "size": "xs",
                        "color": "#666666",
                        "align": "center",
                        "margin": "md"
                    }
                ]
            }
        }
    }
    
    # ‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á Admin User ‡∏´‡∏£‡∏∑‡∏≠ Group
    target_id = ADMIN_GROUP_ID if ADMIN_GROUP_ID else ADMIN_USER_ID
    
    payload = {
        "to": target_id,
        "messages": [admin_message]
    }
    
    try:
        response = requests.post("https://api.line.me/v2/bot/message/push", headers=LINE_HEADERS, data=json.dumps(payload))
        if response.status_code == 200:
            logger.info(f"Admin notification sent successfully for customer {display_name}")
        else:
            logger.error(f"Failed to send admin notification: {response.status_code}")
    except Exception as e:
        logger.error(f"send_admin_notification error: {e}")
        # Fallback ‡πÄ‡∏õ‡πá‡∏ô log
        logger.info(f"Customer {display_name} ({user_id}) sent message during booking: {message_text}")